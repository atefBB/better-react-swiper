{"version":3,"file":"better-react-swiper.esm.js","sources":["../src/arrow.tsx","../src/styles.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport const Arrow = (props: any) => (\r\n  <svg {...props} viewBox=\"0 0 42 42\">\r\n    <path d=\"M36.07 20.18l-29-20A1 1 0 005.5 1v40a1 1 0 001.57.82l29-20a1 1 0 000-1.64z\" />\r\n  </svg>\r\n);\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst isMobile = (media: 'xs' | 'sm' | 'md') => {\r\n  return media === 'xs' || media === 'sm';\r\n};\r\n\r\nconst color = {\r\n  blue: '#105783',\r\n};\r\n\r\nexport const SwiperCanvas = styled.div`\r\n  box-sizing: content-box;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  width: calc(100% - 120px);\r\n  margin: 0;\r\n  padding: 0 60px;\r\n  mask-image: -webkit-gradient(\r\n    linear,\r\n    left top,\r\n    right top,\r\n    color-stop(0, rgba(0, 0, 0, 0)),\r\n    color-stop(0.05, rgba(0, 0, 0, 1)),\r\n    color-stop(0.95, rgba(0, 0, 0, 1)),\r\n    color-stop(1, rgba(0, 0, 0, 0))\r\n  );\r\n  overflow: hidden;\r\n`;\r\n\r\nconst arrowStyles = css`\r\n  box-sizing: content-box;\r\n  cursor: pointer;\r\n  background: #fff;\r\n  border: 0;\r\n  color: ${color.blue};\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);\r\n  font-size: 12px;\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -15px;\r\n  z-index: 1;\r\n  transition: 0.3s opacity;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & svg {\r\n    width: 13px;\r\n  }\r\n`;\r\n\r\nexport const ArrowLeft = styled.button<{ faded: boolean }>`\r\n  ${arrowStyles};\r\n  opacity: ${props => (props.faded ? 0.25 : 1)};\r\n  left: 10px;\r\n\r\n  svg {\r\n    transform: scale(-1);\r\n  }\r\n`;\r\n\r\nexport const ArrowRight = styled.button<{ faded: boolean }>`\r\n  ${arrowStyles};\r\n  opacity: ${props => (props.faded ? 0.25 : 1)};\r\n  right: 10px;\r\n`;\r\n\r\nexport const Item = styled.div<{\r\n  currentIndex: number;\r\n  itemsWide: number;\r\n}>`\r\n  transition: 0.3s left;\r\n  position: relative;\r\n  width: ${props => 100 / props.itemsWide}%;\r\n  flex: 0 0 ${props => 100 / props.itemsWide}%;\r\n  display: flex;\r\n`;\r\n\r\nexport const SwiperWrapper = styled.div<{ media: 'xs' | 'sm' | 'md' }>`\r\n  position: relative;\r\n\r\n  ${SwiperCanvas} {\r\n    ${props =>\r\n      isMobile(props.media)\r\n        ? css`\r\n            width: calc(100% - 80px);\r\n            padding: 0 40px;\r\n          `\r\n        : null}\r\n  }\r\n\r\n  ${ArrowLeft} {\r\n    ${props =>\r\n      isMobile(props.media)\r\n        ? css`\r\n            left: 5px;\r\n          `\r\n        : null}\r\n  }\r\n\r\n  ${ArrowRight} {\r\n    ${props =>\r\n      isMobile(props.media)\r\n        ? css`\r\n            right: 5px;\r\n          `\r\n        : null}\r\n  }\r\n\r\n  ${Item} {\r\n    ${props =>\r\n      isMobile(props.media)\r\n        ? css`\r\n            width: 100%;\r\n            flex-basis: 100%;\r\n          `\r\n        : null}\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { useSwipeable, EventData, SwipeableOptions } from 'react-swipeable';\r\nimport { Arrow } from './arrow';\r\n\r\nimport {\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  Item,\r\n  SwiperCanvas,\r\n  SwiperWrapper,\r\n} from './styles';\r\n\r\nconst MEDIA_MAX_XS = 576;\r\nconst MEDIA_MAX_SM = 767;\r\n\r\ninterface SwiperProps {\r\n  items: any[];\r\n  itemsWide?: number;\r\n  infinity?: boolean;\r\n  canvasClassName?: string;\r\n  canvasStyle?: React.CSSProperties;\r\n  arrowClassName?: string;\r\n  arrowStyle?: React.CSSProperties;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst Swiper = ({\r\n  items = [],\r\n  itemsWide = 3,\r\n  infinity = false,\r\n  canvasClassName,\r\n  canvasStyle,\r\n  arrowClassName,\r\n  arrowStyle,\r\n  style,\r\n}: SwiperProps): JSX.Element => {\r\n  const [currentIndex, setCurrentIndex] = React.useState<number>(0);\r\n  const [slideOffset, setSlideOffset] = React.useState<number>(0);\r\n\r\n  // TODO: there has to be a better way...\r\n  const [lastSwipe, setLastSwipe] = React.useState<number | null>(null);\r\n  const [width, setWidth] = React.useState<number>(0);\r\n\r\n  const swipeConfig: SwipeableOptions = {\r\n    trackTouch: true,\r\n    trackMouse: true,\r\n  };\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwiping: eventData => onSwiping(eventData),\r\n    onSwiped: () => {\r\n      setSlideOffset(0);\r\n    },\r\n    ...swipeConfig,\r\n  });\r\n\r\n  const computeMedia = () => {\r\n    if (width <= MEDIA_MAX_XS) {\r\n      return 'xs';\r\n    }\r\n    if (width <= MEDIA_MAX_SM) {\r\n      return 'sm';\r\n    }\r\n    return 'md';\r\n  };\r\n\r\n  const computeItemWidth = () => {\r\n    return width <= MEDIA_MAX_SM ? 1 : itemsWide;\r\n  };\r\n\r\n  const canGoToPrevious = () => {\r\n    return (infinity && items.length > 1) || currentIndex !== 0;\r\n  };\r\n\r\n  const canGoToNext = () => {\r\n    const computedWide = computeItemWidth();\r\n\r\n    return (\r\n      (infinity && items.length > 1) ||\r\n      currentIndex < items.length - computedWide\r\n    );\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    if (!canGoToPrevious()) {\r\n      return;\r\n    }\r\n\r\n    const computedWide = computeItemWidth();\r\n\r\n    const steps = currentIndex === 0 ? computedWide : 1;\r\n    const prev = (items.length + currentIndex - steps) % items.length;\r\n\r\n    setCurrentIndex(prev);\r\n  };\r\n\r\n  const goToNext = () => {\r\n    if (!canGoToNext()) {\r\n      return;\r\n    }\r\n\r\n    const computedWide = computeItemWidth();\r\n\r\n    const steps = items.length - currentIndex > computedWide ? 1 : computedWide;\r\n    const next = (items.length + currentIndex + steps) % items.length;\r\n\r\n    setCurrentIndex(next);\r\n  };\r\n\r\n  const resetSwipe = () => {\r\n    const now = new Date().getTime();\r\n    setSlideOffset(0);\r\n    setLastSwipe(now);\r\n  };\r\n\r\n  const onSwiping = (e: EventData) => {\r\n    const now = new Date().getTime();\r\n\r\n    if (!width) {\r\n      return;\r\n    }\r\n\r\n    if (lastSwipe && now - lastSwipe < 250) {\r\n      return;\r\n    }\r\n\r\n    const draggedPercent = (e.deltaX * 2) / width;\r\n\r\n    setSlideOffset(draggedPercent * 100);\r\n\r\n    if (draggedPercent < -0.3333) {\r\n      resetSwipe();\r\n      goToPrevious();\r\n      return;\r\n    }\r\n\r\n    if (draggedPercent > 0.3333) {\r\n      resetSwipe();\r\n      goToNext();\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onResize = (w: number) => {\r\n    setWidth(w);\r\n    resetSwipe();\r\n  };\r\n\r\n  const hideArrows = items.length <= itemsWide;\r\n\r\n  return (\r\n    <ReactResizeDetector handleWidth onResize={onResize}>\r\n      <SwiperWrapper style={style} media={computeMedia()}>\r\n        {!hideArrows && (\r\n          <ArrowLeft\r\n            data-testid=\"prev\"\r\n            faded={!canGoToPrevious()}\r\n            onClick={goToPrevious}\r\n            className={arrowClassName}\r\n            style={arrowStyle}\r\n          >\r\n            <Arrow />\r\n          </ArrowLeft>\r\n        )}\r\n        <SwiperCanvas\r\n          {...swipeHandlers}\r\n          className={canvasClassName}\r\n          style={canvasStyle}\r\n        >\r\n          {items.map((item, i) => (\r\n            <Item\r\n              key={i}\r\n              itemsWide={computeItemWidth()}\r\n              currentIndex={currentIndex}\r\n              data-testid=\"item\"\r\n              style={{\r\n                left: `-${(currentIndex * 100) / computeItemWidth() +\r\n                  slideOffset}%`,\r\n              }}\r\n            >\r\n              {item}\r\n            </Item>\r\n          ))}\r\n        </SwiperCanvas>\r\n        {!hideArrows && (\r\n          <ArrowRight\r\n            data-testid=\"next\"\r\n            faded={!canGoToNext()}\r\n            onClick={goToNext}\r\n            className={arrowClassName}\r\n            style={arrowStyle}\r\n          >\r\n            <Arrow />\r\n          </ArrowRight>\r\n        )}\r\n      </SwiperWrapper>\r\n    </ReactResizeDetector>\r\n  );\r\n};\r\n\r\nexport default Swiper;\r\n"],"names":["Arrow","props","React","viewBox","d","isMobile","media","color","blue","SwiperCanvas","styled","div","arrowStyles","css","ArrowLeft","button","faded","ArrowRight","Item","itemsWide","SwiperWrapper","MEDIA_MAX_XS","MEDIA_MAX_SM","Swiper","items","infinity","canvasClassName","canvasStyle","arrowClassName","arrowStyle","style","currentIndex","setCurrentIndex","slideOffset","setSlideOffset","lastSwipe","setLastSwipe","width","setWidth","swipeConfig","trackTouch","trackMouse","swipeHandlers","useSwipeable","onSwiping","eventData","onSwiped","computeMedia","computeItemWidth","canGoToPrevious","length","canGoToNext","computedWide","goToPrevious","steps","prev","goToNext","next","resetSwipe","now","Date","getTime","e","draggedPercent","deltaX","onResize","w","hideArrows","ReactResizeDetector","handleWidth","onClick","className","map","item","i","key","left"],"mappings":"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"}